{"version":3,"sources":["pages/Home.js","components/DataEntry.js","pages/Login.js","components/TextDisplayer.js","components/Loader.js","api/client.js","pages/Console.js","store/uistate.js","store/example.js","store/user.js","store/terminal.js","store/index.js","panels/panelDefs.js","panels/GoldenLayoutManager.js","components/Icon.js","panels/SideBar.js","config.js","panels/Home.js","App.js","serviceWorker.js","initialize.js","index.js"],"names":["Home","example","this","props","store","isProcessing","react_default","a","createElement","style","color","es_button","onClick","startProcessing","stopProcessing","whoAmI","React","PureComponent","WrapperForm","Input","Search","Form","create","name","onSubmit","_props$form","form","getFieldDecorator","getFieldError","isFieldTouched","usernameError","passwordError","es_form","layout","e","preventDefault","validateFields","err","values","Item","validateStatus","help","rules","required","message","input","prefix","es_icon","type","placeholder","htmlType","ActionPullDown","title","menuList","handleMenuClick","menuItems","map","menu","idx","es_menu","key","theme","dropdown","overlay","ghost","Login","_this","updateUserInfo","username","password","_this$props$store","status","concat","stats","textAlign","fontSize","width","margin","marginTop","ConsoleLine","icon","onEnterKeyDown","text","userIcon","textLine","className","moment","format","onKeyDown","ResponseLine","PageLoader","spinning","spin","HttpClient","res","JSON","stringify","URL","local","wf","option","mode","LocalhostClient","endpoint","fetch","then","json","result","_name","GithubClient","cmd","Object","esm_get","getPrototypeOf","call","adapterMapper","GithubAdapter","LocalAdapter","Console","_this$props","terminal","user","keyCode","switchProcessingState","target","value","adapterHandler","setAdapter","actionHandler","handleAction","_this$props2","uiState","histories","getHistories","TextDisplayer_ConsoleLine","ResponseList","getResponses","TextDisplayer_ResponseLine","getAdapterName","DataEntry_ActionPullDown","actionEvents","Loader_PageLoader","maxHeight","getHeight","decorate","toggleSideBar","manager","updateSize","getSelectedItem","setGoldenLayoutManager","closeAll","openAll","componentsList","action","Example","who","desc","state","observable","computed","User","getUserInfo","Terminal","responses","adapter","addReponse","push","parse","bool","_callee","line","regenerator_default","wrap","_context","prev","next","_sendRequest","sent","abrupt","stop","_clearHistories","_reCallHistory","console","log","_callee2","_context2","get","_receive","response","func","length","slice","_this2","onEnterClick","UiState","ItemConfig","component","observer","GoldenLayoutManager","instance","initialize","registerComponent","init","forEach","config","selectedItem","item","targetComp","find","newItemConfig","root","contentItems","addChild","removeChild","openPanel","height","FolderMenuItem","isOpen","whiteSpace","marginRight","SideBarMenu","tooltip","placement","COMPONENT_CONFIG","getComponentConfig","SideBar","onClickMenuItem","componentName","Icon_SideBarMenu","id","conf","SideBar_MenuItem","MenuItem","Icon_FolderMenuItem","GoldenLayoutConfig","settings","hasHeaders","constrainDragToContainer","reorderEnabled","selectionEnabled","popoutWholeStack","blockedPopoutsThrowError","closePopoutsOnUnload","showPopoutIcon","showMaximiseIcon","showCloseIcon","dimensions","borderWidth","minItemHeight","minItemWidth","headerHeight","dragProxyWidth","dragProxyHeight","labels","close","maximise","minimise","popout","content","isClosable","_React$PureComponent","classCallCheck","possibleConstructorReturn","node","createRef","inherits","createClass","GoldenLayout","window","$","setInstance","lib_default","customClassName","percentage","secondaryInitialSize","onDragEnd","primaryMinSize","secondaryMinSize","panels_SideBar","ref","App","panels_Home_Home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1600e001.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\n\nclass Home extends React.PureComponent {\n  render() {\n    const { example } = this.props.store;\n    const isProcessing = example.isProcessing ? <div><p>Now Loading...</p></div> : <p>Sleeping.</p>\n    return (\n      <div style={{ color: \"white\" }}>\n        <div>\n          <h3>Home Menu</h3>\n        </div>\n        <div>\n          <h5>Example Usages</h5>\n          <Button onClick={() => example.startProcessing()}>Start</Button>\n          <Button onClick={() => example.stopProcessing()}>Stop</Button>\n          <div>\n            {isProcessing}\n            <p>{example.whoAmI}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Form, Icon, Input, Button, Dropdown, Menu } from \"antd\";\n\nconst { Search } = Input;\n\nconst SearchBase = props => {\n  const { placeholder, onSearch, width } = props;\n  return (\n    <Search\n      placeholder={placeholder}\n      onSearch={onSearch}\n      onPressEnter={e => onSearch(e.target.value)}\n      style={{ width: `${width}px` }}\n    />\n  );\n};\n\nconst LoginForm = props => {\n  const { onSubmit } = props;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    });\n  };\n\n  const { getFieldDecorator, getFieldError, isFieldTouched } = props.form;\n  const usernameError = isFieldTouched(\"username\") && getFieldError(\"username\");\n  const passwordError = isFieldTouched(\"password\") && getFieldError(\"password\");\n  return (\n    <Form layout=\"vertical\" onSubmit={handleSubmit}>\n      <Form.Item\n        validateStatus={usernameError ? \"error\" : \"\"}\n        help={usernameError || \"\"}\n      >\n        {getFieldDecorator(\"username\", {\n          rules: [{ required: false, message: \"Please input your username!\" }]\n        })(\n          <Input\n            prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            placeholder=\"Username\"\n          />\n        )}\n      </Form.Item>\n      <Form.Item\n        validateStatus={passwordError ? \"error\" : \"\"}\n        help={passwordError || \"\"}\n      >\n        {getFieldDecorator(\"password\", {\n          rules: [{ required: false, message: \"Please input your Password!\" }]\n        })(\n          <Input\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        )}\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Login\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst WrapperForm = Form.create({ name: \"LoginForm\" })(LoginForm);\n\nconst ActionPullDown = props => {\n  const { title, menuList, handleMenuClick } = props;\n  const menuItems = menuList.map((menu, idx) => {\n    return (\n      <Menu.Item title={menu.title} key={idx}>\n        {menu.title}\n      </Menu.Item>\n    );\n  });\n  const menu = (\n    <Menu theme={\"dark\"} onClick={handleMenuClick}>\n      {menuItems}\n    </Menu>\n  );\n\n  return (\n    <Dropdown overlay={menu}>\n      <Button ghost>\n        {title} <Icon type=\"down\" />\n      </Button>\n    </Dropdown>\n  );\n};\n\nexport { SearchBase as Search, WrapperForm as LoginForm, ActionPullDown };","import React from \"react\";\nimport { LoginForm } from \"components/DataEntry\";\n\nclass Login extends React.PureComponent {\n  onSubmit = e => {\n    this.props.store.updateUserInfo(e.username, e.password);\n  };\n\n  render() {\n    const { username, status } = this.props.store;\n    const title = `Hello ${username || \"\"}!!`;\n    const stats =\n      status === \"fine\"\n        ? \"You look good today!!\"\n        : status === \"soso\"\n        ? \"Have a nice day!\"\n        : \"\";\n    return (\n      <div style={{ textAlign: \"center\", fontSize: \"1.3rem\" }}>\n        <div\n          style={{\n            width: \"50%\",\n            textAlign: \"center\",\n            margin: \"auto\",\n            marginTop: \"20%\"\n          }}\n        >\n          <h3 style={{ color: \"white\" }}>{title}</h3>\n          <p style={{ color: \"white\", margin: \"0px\" }}>{stats}</p>\n          <LoginForm onSubmit={this.onSubmit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Icon } from \"antd\";\nimport moment from \"moment\";\n\nconst ConsoleLine = props => {\n  const { name, icon, onEnterKeyDown, text, idx } = props;\n  const userIcon = icon ? icon : \"user\";\n  const textLine = text ? (\n    <span>\n      {idx}\n      <span className=\"console-input-log\">{text}</span>\n    </span>\n  ) : (\n    <span>\n      {moment().format(\"MMMM D H:mm:ss\")}\n      <input onKeyDown={onEnterKeyDown} className=\"console-input\" />\n    </span>\n  );\n  return (\n    <div>\n      <span style={{ fontSize: \"1rem\" }}>\n        <Icon className=\"console-icon\" type={userIcon} />\n        <span className=\"console-username\">{name}</span>\n      </span>\n      {textLine}\n    </div>\n  );\n};\n\nconst ResponseLine = props => {\n  const { text } = props;\n  return <div className=\"response-log\">{text}</div>;\n};\n\nexport { ConsoleLine, ResponseLine };\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst PageLoader = props => {\n    const { spinning } = props;\n    return (\n        <div className=\"loader\">\n            <Spin spinning={spinning} />\n        </div>\n    )\n}\n\nexport {PageLoader};","import { Exception } from \"handlebars\";\n\nclass HttpClient {\n  static _name;\n  static URL = {\n    local: \"http://localhost:8080\",\n    wf: \"http://api.github.com\"\n  };\n\n  static option = {\n    mode: \"cors\"\n  };\n\n  static parse(res) {\n    return JSON.stringify(res);\n  }\n}\n\nclass LocalhostClient extends HttpClient {\n  static _name = \"Localhost Adapter\";\n\n  static async get(endpoint) {\n    const result = await fetch(`${this.URL.local}/${endpoint}`).then(res => {\n      return res.json();\n    });\n    return result;\n  }\n}\n\nclass GithubClient extends HttpClient {\n  static _name = \"Github Adapter\";\n\n  static async get(endpoint) {\n    const result = await fetch(`${this.URL.wf}/${endpoint}`, {\n      mode: \"cors\"\n    }).then(res => {\n      return res.json();\n    });\n    return result;\n  }\n\n  static parse(res) {\n    const cmd = res.cmd;\n    delete res[\"cmd\"];\n    return `command: <${cmd}> result: ${super.parse(res)}`;\n  }\n}\n\nexport { LocalhostClient as LocalAdapter, GithubClient as GithubAdapter };\n","import React from \"react\";\nimport { ConsoleLine, ResponseLine } from \"components/TextDisplayer\";\nimport { ActionPullDown } from \"components/DataEntry\";\nimport { PageLoader } from \"components/Loader\";\nimport { GithubAdapter, LocalAdapter } from \"api/client\";\n\nconst adapterMapper = [\n  { title: \"Github\", key: GithubAdapter },\n  { title: \"Localhost\", key: LocalAdapter }\n];\nclass Console extends React.PureComponent {\n  componentDidMount() {\n    const { terminal } = this.props;\n    terminal.setAdapter(adapterMapper[0].key);\n  }\n\n  onEnterKeyDown = e => {\n    const { user, terminal } = this.props;\n\n    if (e.keyCode === 13) {\n      terminal.switchProcessingState(true);\n      const text = e.target.value;\n      terminal.onEnterKeyDown(text !== \"\" ? text : \" \").then(() => {\n        terminal.switchProcessingState(false);\n      });\n      e.target.value = \"\";\n    }\n  };\n\n  adapterHandler = e => {\n    const { terminal } = this.props;\n    terminal.setAdapter(adapterMapper[e.key].key);\n  };\n\n  actionHandler = e => {\n    const { terminal } = this.props;\n    terminal.handleAction(e.key);\n  };\n\n  render() {\n    const { user, terminal, uiState } = this.props;\n    const histories = terminal.getHistories.map((text, idx) => {\n      return (\n        <li key={idx}>\n          <ConsoleLine idx={idx} text={text} name={user.username} />\n        </li>\n      );\n    });\n    const ResponseList = terminal.getResponses.map((res, idx) => {\n      return (\n        <li key={idx}>\n          <ResponseLine text={res} />\n        </li>\n      );\n    });\n\n    return (\n      <div>\n        <div className=\"console-header\">\n          <h3 style={{ color: \"white\" }}>Adapter: {terminal.getAdapterName}</h3>\n          <ActionPullDown\n            title={\"ADAPTER\"}\n            menuList={adapterMapper}\n            handleMenuClick={this.adapterHandler}\n          />\n          <ActionPullDown\n            title={\"ACTION\"}\n            menuList={terminal.actionEvents}\n            handleMenuClick={this.actionHandler}\n          />\n        </div>\n        <ul className=\"console-list\">\n          {histories}\n          <li key={1}>\n            <ConsoleLine\n              onEnterKeyDown={this.onEnterKeyDown}\n              name={user.username}\n            />\n          </li>\n        </ul>\n        <div>\n          <PageLoader spinning={terminal.isProcessing} />\n          <ul\n            style={{ maxHeight: uiState.getHeight() / 3 }}\n            className=\"response-console\"\n          >\n            {ResponseList}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Console;\n","import { action, decorate } from \"mobx\";\n\nclass UiState {\n  manager;\n\n  toggleSideBar = () => {\n    this.manager.updateSize();\n  };\n\n  getSelectedItem = () => {\n    return this.manager.getSelectedItem;\n  };\n\n  setGoldenLayoutManager = manager => {\n    this.manager = manager;\n  };\n\n  closeAll = () => {\n    this.manager.closeAll();\n  };\n\n  openAll = componentsList => {\n    this.manager.openAll(componentsList);\n  };\n\n  getHeight = () => {\n    return this.manager.getHeight();\n  };\n}\n\nexport default decorate(UiState, {\n  toggleSideBar: action,\n  getSelectedItem: action,\n  closeAll: action,\n  openAll: action\n});\n","import { observable, action, computed, decorate } from \"mobx\";\n\nclass Example {\n\n    isProcessing = false;\n    who = {\n        name: 'hoge',\n        desc: 'iam example stete class'\n    }\n    \n    startProcessing() {\n        this.isProcessing = true;\n    }\n\n    stopProcessing() {\n        this.isProcessing = false;\n    }\n\n    get whoAmI() {\n        const state = this.isProcessing ? 'Processing' : 'Sleeping'\n        return `name <${this.who.name}> : description ${this.who.desc} ${state}`\n    }\n\n}\n\nexport default decorate(Example, {\n    isProcessing: observable,\n    startProcessing: action,\n    stopProcessing: action,\n    whoAmI: computed\n})","import { action, observable, computed, decorate } from \"mobx\";\n\nclass User {\n\n    username;\n    status;\n\n    updateUserInfo(username, status) {\n        this.username = username;\n        this.status = status;\n    }\n\n    get getUserInfo() {\n        return `NAME: ${this.username} STATUS: ${this.status}`;\n    }\n}\n\nexport default decorate(User, {\n    username: observable,\n    status: observable,\n    updateUserInfo: action,\n    getUserInfo: computed\n});","import { action, observable, decorate, computed } from \"mobx\";\nimport { bool } from \"prop-types\";\nimport { async } from \"q\";\n\nclass Terminal {\n  histories = [];\n  responses = [];\n  isProcessing = false;\n  adapter;\n\n  setAdapter = adapter => {\n    this.adapter = adapter;\n  };\n\n  get getAdapterName() {\n    return this.adapter ? this.adapter._name : \"\";\n  }\n\n  get getHistories() {\n    const length = this.histories.length;\n    return (\n      this.histories.slice(length < 10 ? 0 : length - 10, length) ||\n      this.histories\n    );\n  }\n\n  get getResponses() {\n    const length = this.responses.length;\n    const parsedResponses =\n      this.responses.slice(length < 10 ? 0 : length - 10, length) ||\n      this.responses;\n    return parsedResponses.map(res => {\n      return this.parse(res);\n    });\n  }\n\n  addReponse = res => {\n    this.responses.push(res);\n  };\n\n  parse = res => {\n    return this.adapter.parse(res);\n  };\n\n  switchProcessingState = bool => {\n    this.isProcessing = bool;\n  };\n\n  onEnterKeyDown = async line => {\n    const result = await this._sendRequest(line);\n    this.histories.push(line);\n    return result;\n  };\n\n  handleAction = idx => {\n    this.actionEvents[idx][\"func\"]();\n  };\n\n  _clearHistories = () => {\n    this.histories = [];\n  };\n\n  _reCallHistory = idx => {\n    console.log(\"Wait for release...\");\n  };\n\n  _sendRequest = async cmd => {\n    const result = await this.adapter.get(cmd);\n    this._receive(cmd, result);\n    return result;\n  };\n\n  _receive = (cmd, res) => {\n    console.log(res);\n    this.addReponse({ cmd: cmd, response: res });\n  };\n\n  actionEvents = [\n    { title: \"Clear Console\", func: this._clearHistories },\n    { title: \"Recall\", func: this._reCallHistory }\n  ];\n}\n\nexport default decorate(Terminal, {\n  histories: observable,\n  responses: observable,\n  adapter: observable,\n  isProcessing: observable,\n  getAdapterName: computed,\n  getHistories: computed,\n  onEnterClick: action,\n  handleAction: action,\n  setAdapter: action,\n  addReponse: action,\n  switchProcessingState: action\n});\n","import UiState from 'store/uistate';\nimport Example from 'store/example';\nimport User from 'store/user';\nimport Terminal from 'store/terminal';\n\n\nconst store = {\n    uiState: new UiState(),\n    example: new Example(),\n    user: new User(),\n    terminal: new Terminal(),\n};\n\nexport default store;","import { observer } from 'mobx-react';\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\nimport Console from 'pages/Console';\n\nimport store from 'store';\n\nconst ItemConfig = [\n  { title: \"home\", type: \"react-component\", key: \"home\", component: observer(Home), props: { store: store } },\n  { title: \"Login\", type: \"react-component\", key: \"login\", component: observer(Login), props: { store: store.user } },\n  { title: \"Terminal\", type: \"react-component\", key: \"console\", component: observer(Console), props: { user: store.user, terminal: store.terminal, uiState: store.uiState } }  \n];\n\nexport { ItemConfig };","import { ItemConfig } from \"panels/panelDefs\";\n\nclass GoldenLayoutManager {\n\n    static instance;\n\n    static setInstance(instance) {\n        this.instance = instance;\n        this.initialize();\n    };\n\n    static initialize() {\n        this.registerComponent();\n        this.instance.init();\n        console.log('Successfully registered components!')\n    }\n\n    static registerComponent() {\n        ItemConfig.forEach(config => {\n          this.instance.registerComponent(config.key, config.component);\n        });\n    };\n\n    static updateSize() {\n        this.instance.updateSize();\n    }\n\n    static getSelectedItem() {\n        return this.instance.selectedItem;\n    }\n    \n    static getComponentConfig() {\n        return ItemConfig.map(item => {\n            return {title: item.title, key: item.key};\n        });\n    }\n\n    static openPanel(component) {\n          const targetComp = ItemConfig.find(item => {\n              return item.key === component;\n          });\n          const newItemConfig = {\n            title: component,\n            type: \"react-component\",\n            component: component,\n            props: targetComp.props\n          };\n          const lastItem = this.instance.root.contentItems;\n          lastItem[0].addChild(newItemConfig)\n    };\n\n    static closeAll() {\n        const contentItems = this.instance.root.contentItems || [];\n        if (contentItems.length > 0) {\n            while(contentItems[0].contentItems.length > 0) {\n                contentItems[0].removeChild(contentItems[0].contentItems[0])\n            }\n        }\n    }\n\n    static openAll() {\n        ItemConfig.forEach(component => {\n            this.openPanel(component.key);\n        })\n    }\n\n    static getHeight () {\n        return this.instance.height;\n    }\n}\n\nexport default GoldenLayoutManager;","import React from \"react\";\nimport { Icon, Tooltip } from \"antd\";\n\nconst FolderMenuItem = props => {\n  const { isOpen, title } = props;\n  const name = isOpen ? \"folder-open\" : \"folder\";\n  return (\n    <span style={{ whiteSpace: \"nowrap\" }}>\n      <Icon type={name} style={{ marginRight: \"3px\" }} />\n      {title}\n    </span>\n  );\n};\n\nconst SideBarMenu = props => {\n  const { closeAll, openAll } = props;\n  return (\n    <div>\n      <ul className=\"sidebar-menu\">\n        <li className=\"sidebar-menu-item\">\n          <Tooltip placement=\"bottomRight\" title=\"Open All Tabs\">\n            <span onClick={openAll}>\n              <Icon type=\"folder-open\" />\n            </span>\n          </Tooltip>\n        </li>\n        <li className=\"sidebar-menu-item\">\n          <Tooltip placement=\"bottomRight\" title=\"Close All Tabs\">\n            <span onClick={closeAll}>\n              <Icon type=\"close-square\" />\n            </span>\n          </Tooltip>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport { FolderMenuItem, SideBarMenu };\n","import React from \"react\";\nimport GoldenLayoutManager from \"panels/GoldenLayoutManager\";\nimport { FolderMenuItem, SideBarMenu } from \"components/Icon\";\n\nconst COMPONENT_CONFIG =  GoldenLayoutManager.getComponentConfig();\n\nclass SideBar extends React.PureComponent {\n\n  onClickMenuItem = componentName => {\n    GoldenLayoutManager.openPanel(componentName);\n  };\n\n  render() {\n    return (\n      <div className=\"fit sidebar\">\n        <div className=\"sidebar-title\">\n          <h4>TITLE</h4>\n        </div>\n        <SideBarMenu openAll={this.props.openAll} closeAll={this.props.closeAll} />\n        <ul id=\"menu-container\">\n          {COMPONENT_CONFIG.map(conf =>{\n            return <MenuItem key={conf.key} title={conf.title} componentName={conf.key} onClick={this.onClickMenuItem} />\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst MenuItem = props => {\n  const { title, onClick, componentName } = props;\n  return (\n    <li className=\"sidebar-tab-item\" onClick={() => onClick(componentName)}>\n      <FolderMenuItem\n        title={title}\n        isOpen={false}\n      />\n    </li>\n  );\n};\n\nexport default SideBar;\n","const GoldenLayoutConfig = {\n  settings: {\n    hasHeaders: true,\n    constrainDragToContainer: true,\n    reorderEnabled: true,\n    selectionEnabled: true,\n    popoutWholeStack: false,\n    blockedPopoutsThrowError: true,\n    closePopoutsOnUnload: true,\n    showPopoutIcon: true,\n    showMaximiseIcon: true,\n    showCloseIcon: true\n  },\n  dimensions: {\n    borderWidth: 10,\n    minItemHeight: 50,\n    minItemWidth: 50,\n    headerHeight: 20,\n    dragProxyWidth: 300,\n    dragProxyHeight: 200\n  },\n  labels: {\n    close: \"close\",\n    maximise: \"maximise\",\n    minimise: \"minimise\",\n    popout: \"open in new window\"\n  },\n  content: [\n    {\n      type: \"row\",\n      isClosable: false,\n      content: []\n    }\n  ]\n};\n\nexport { GoldenLayoutConfig };","import React from \"react\";\nimport GoldenLayout from \"golden-layout\";\nimport SplitPane from \"react-splitter-layout\";\nimport SideBar from \"panels/SideBar\";\nimport GoldenLayoutManager from \"panels/GoldenLayoutManager\";\nimport { GoldenLayoutConfig } from \"config\";\n\nconst SIDEBAR_MIN_SIZE = 0;\nconst PANEL_MIN_SIZE = 85;\nconst PANEL_INITIALIZE_SIZE = 90;\nconst CUSTOM_SPLITTER_CLASSNAME = \"custom-splitter\";\n\nexport class Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.node = React.createRef();\n  }\n  componentDidMount() {\n    const instance = new GoldenLayout(\n      GoldenLayoutConfig,\n      window.$(\"#gl-container\")\n    );\n    GoldenLayoutManager.setInstance(instance);\n    this.props.store.uiState.setGoldenLayoutManager(GoldenLayoutManager);\n  }\n\n  render() {\n    const { uiState, user } = this.props.store;\n\n    return (\n      <div className=\"fit\">\n        <SplitPane\n         customClassName={CUSTOM_SPLITTER_CLASSNAME} \n          percentage={true}\n          secondaryInitialSize={PANEL_INITIALIZE_SIZE}\n          onDragEnd={uiState.toggleSideBar}\n          primaryMinSize={SIDEBAR_MIN_SIZE}\n          secondaryMinSize={PANEL_MIN_SIZE}\n        >\n          <SideBar openAll={uiState.openAll} closeAll={uiState.closeAll} toggleSideBar={uiState.toggleSideBar} />\n          <div id=\"gl-container\">\n            <div className=\"container-header\">\n              <h4>{user.username ? `${user.username}$ ${user.getUserInfo}` : 'Please Login...'}</h4>\n            </div>\n            <div ref={node => (this.node = node)} />\n          </div>\n        </SplitPane>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Home } from 'panels/Home';\nimport \"golden-layout/src/css/goldenlayout-base.css\";\nimport \"golden-layout/src/css/goldenlayout-dark-theme.css\";\nimport \"react-splitter-layout/lib/index.css\";\nimport 'antd/dist/antd.css';\nimport 'index.css';\nimport store from 'store';\nimport { observer } from 'mobx-react';\n\nobserver(Home)\n\nfunction App() {\n  return (\n    <div className=\"fit\">\n      <Home store={store} ref={React.createRef()}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport $ from \"jquery\";\n\nfunction init() {\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n    window.$ = $;\n}\n\nexport { init };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { init } from 'initialize';\n\n\ninit();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}