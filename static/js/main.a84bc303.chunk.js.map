{"version":3,"sources":["pages/Home.js","components/DataEntry.js","pages/Login.js","components/TextDisplayer.js","api/client.js","pages/Console.js","store/uistate.js","store/example.js","store/user.js","store/terminal.js","store/index.js","panels/panelDefs.js","panels/GoldenLayoutManager.js","components/Icon.js","panels/SideBar.js","config.js","panels/Home.js","App.js","serviceWorker.js","initialize.js","index.js"],"names":["Home","example","this","props","store","isProcessing","react_default","a","createElement","style","color","es_button","onClick","startProcessing","stopProcessing","whoAmI","React","PureComponent","WrapperForm","Input","Search","Form","create","name","onSubmit","_props$form","form","getFieldDecorator","getFieldError","isFieldTouched","usernameError","passwordError","es_form","layout","e","preventDefault","validateFields","err","values","Item","validateStatus","help","rules","required","message","input","prefix","es_icon","type","placeholder","htmlType","ActionPullDown","title","menuList","handleMenuClick","menuItems","map","menu","idx","es_menu","key","theme","dropdown","overlay","ghost","Login","_this","updateUserInfo","username","password","_this$props$store","status","concat","stats","textAlign","fontSize","width","margin","marginTop","ConsoleLine","icon","onEnterKeyDown","text","userIcon","textLine","className","moment","format","onKeyDown","HttpClient","URL","local","wf","option","mode","LocalhostClient","endpoint","fetch","then","res","json","result","_name","GithubClient","adapterMapper","GithubAdapter","LocalAdapter","Console","_this$props","terminal","user","keyCode","target","value","adapterHandler","setAdapter","actionHandler","handleAction","_this$props2","histories","getHistories","TextDisplayer_ConsoleLine","getAdapterName","DataEntry_ActionPullDown","actionEvents","decorate","toggleSideBar","manager","updateSize","getSelectedItem","setGoldenLayoutManager","closeAll","openAll","componentsList","action","Example","who","desc","state","observable","computed","User","getUserInfo","Terminal","adapter","line","_sendRequest","push","_clearHistories","_reCallHistory","console","log","_callee","cmd","regenerator_default","wrap","_context","prev","next","get","sent","_receive","stop","func","length","slice","onEnterClick","uiState","UiState","ItemConfig","component","observer","GoldenLayoutManager","instance","initialize","registerComponent","init","forEach","config","selectedItem","item","targetComp","find","newItemConfig","root","contentItems","addChild","removeChild","_this2","openPanel","FolderMenuItem","isOpen","whiteSpace","marginRight","SideBarMenu","tooltip","placement","COMPONENT_CONFIG","getComponentConfig","SideBar","onClickMenuItem","componentName","Icon_SideBarMenu","id","conf","SideBar_MenuItem","MenuItem","Icon_FolderMenuItem","GoldenLayoutConfig","settings","hasHeaders","constrainDragToContainer","reorderEnabled","selectionEnabled","popoutWholeStack","blockedPopoutsThrowError","closePopoutsOnUnload","showPopoutIcon","showMaximiseIcon","showCloseIcon","dimensions","borderWidth","minItemHeight","minItemWidth","headerHeight","dragProxyWidth","dragProxyHeight","labels","close","maximise","minimise","popout","content","isClosable","_React$PureComponent","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","node","createRef","inherits","createClass","GoldenLayout","window","$","setInstance","lib_default","customClassName","percentage","secondaryInitialSize","onDragEnd","primaryMinSize","secondaryMinSize","panels_SideBar","ref","App","panels_Home_Home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a84bc303.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\n\nclass Home extends React.PureComponent {\n  render() {\n    const { example } = this.props.store;\n    const isProcessing = example.isProcessing ? <div><p>Now Loading...</p></div> : <p>Sleeping.</p>\n    return (\n      <div style={{ color: \"white\" }}>\n        <div>\n          <h3>Home Menu</h3>\n        </div>\n        <div>\n          <h5>Example Usages</h5>\n          <Button onClick={() => example.startProcessing()}>Start</Button>\n          <Button onClick={() => example.stopProcessing()}>Stop</Button>\n          <div>\n            {isProcessing}\n            <p>{example.whoAmI}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Form, Icon, Input, Button, Dropdown, Menu } from \"antd\";\n\nconst { Search } = Input;\n\nconst SearchBase = props => {\n  const { placeholder, onSearch, width } = props;\n  return (\n    <Search\n      placeholder={placeholder}\n      onSearch={onSearch}\n      onPressEnter={e => onSearch(e.target.value)}\n      style={{ width: `${width}px` }}\n    />\n  );\n};\n\nconst LoginForm = props => {\n  const { onSubmit } = props;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    });\n  };\n\n  const { getFieldDecorator, getFieldError, isFieldTouched } = props.form;\n  const usernameError = isFieldTouched(\"username\") && getFieldError(\"username\");\n  const passwordError = isFieldTouched(\"password\") && getFieldError(\"password\");\n  return (\n    <Form layout=\"vertical\" onSubmit={handleSubmit}>\n      <Form.Item\n        validateStatus={usernameError ? \"error\" : \"\"}\n        help={usernameError || \"\"}\n      >\n        {getFieldDecorator(\"username\", {\n          rules: [{ required: false, message: \"Please input your username!\" }]\n        })(\n          <Input\n            prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            placeholder=\"Username\"\n          />\n        )}\n      </Form.Item>\n      <Form.Item\n        validateStatus={passwordError ? \"error\" : \"\"}\n        help={passwordError || \"\"}\n      >\n        {getFieldDecorator(\"password\", {\n          rules: [{ required: false, message: \"Please input your Password!\" }]\n        })(\n          <Input\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        )}\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Login\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst WrapperForm = Form.create({ name: \"LoginForm\" })(LoginForm);\n\nconst ActionPullDown = props => {\n  const { title, menuList, handleMenuClick } = props;\n  const menuItems = menuList.map((menu, idx) => {\n    return (\n      <Menu.Item title={menu.title} key={idx}>\n        {menu.title}\n      </Menu.Item>\n    );\n  });\n  const menu = (\n    <Menu theme={\"dark\"} onClick={handleMenuClick}>\n      {menuItems}\n    </Menu>\n  );\n\n  return (\n    <Dropdown overlay={menu}>\n      <Button ghost>\n        {title} <Icon type=\"down\" />\n      </Button>\n    </Dropdown>\n  );\n};\n\nexport { SearchBase as Search, WrapperForm as LoginForm, ActionPullDown };","import React from \"react\";\nimport { LoginForm } from \"components/DataEntry\";\n\nclass Login extends React.PureComponent {\n  onSubmit = e => {\n    this.props.store.updateUserInfo(e.username, e.password);\n  };\n\n  render() {\n    const { username, status } = this.props.store;\n    const title = `Hello ${username || \"\"}!!`;\n    const stats =\n      status === \"fine\"\n        ? \"You look good today!!\"\n        : status === \"soso\"\n        ? \"Have a nice day!\"\n        : \"\";\n    return (\n      <div style={{ textAlign: \"center\", fontSize: \"1.3rem\" }}>\n        <div\n          style={{\n            width: \"50%\",\n            textAlign: \"center\",\n            margin: \"auto\",\n            marginTop: \"20%\"\n          }}\n        >\n          <h3 style={{ color: \"white\" }}>{title}</h3>\n          <p style={{ color: \"white\", margin: \"0px\" }}>{stats}</p>\n          <LoginForm onSubmit={this.onSubmit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Icon } from \"antd\";\nimport moment from \"moment\";\n\nconst ConsoleLine = props => {\n  const { name, icon, onEnterKeyDown, text, idx } = props;\n  const userIcon = icon ? icon : \"user\";\n  const textLine = text ? (\n    <span>\n      {idx}\n      <span className=\"console-input-log\">{text}</span>\n    </span>\n  ) : (\n    <span>\n      {moment().format(\"MMMM D H:mm:ss\")}\n      <input onKeyDown={onEnterKeyDown} className=\"console-input\" />\n    </span>\n  );\n  return (\n    <div>\n      <span style={{ fontSize: \"1rem\" }}>\n        <Icon className=\"console-icon\" type={userIcon} />\n        <span className=\"console-username\">{name}</span>\n      </span>\n      {textLine}\n    </div>\n  );\n};\n\nexport { ConsoleLine };\n","class HttpClient {\n    static URL = {\n        local: 'http://localhost:8080',\n        wf: 'http://api.github.com'\n    }\n\n    static option = {\n        mode: 'cors'\n    }\n}\n\nclass LocalhostClient extends HttpClient {\n    static _name = 'Localhost Adapter';\n\n    static async get(endpoint) {\n        const result = await fetch(`${this.URL.local}/${endpoint}`).then(res => {\n            return res.json()\n        });\n        return result;\n    };\n}\n\nclass GithubClient extends HttpClient {\n    static _name = 'Github Adapter'\n\n    static get(endpoint) {\n        const result = fetch(`${this.URL.wf}/${endpoint}`, {mode: 'cors'}).then(res => {\n            return res.json()\n        });\n        return result;\n    };\n}\n\nexport { LocalhostClient as LocalAdapter, GithubClient as GithubAdapter }","import React from \"react\";\nimport { ConsoleLine } from \"components/TextDisplayer\";\nimport { ActionPullDown } from \"components/DataEntry\";\nimport { GithubAdapter, LocalAdapter } from \"api/client\";\n\nconst adapterMapper = [\n  { title: \"Github\", key: GithubAdapter },\n  { title: \"Localhost\", key: LocalAdapter }\n];\nclass Console extends React.PureComponent {\n  componentDidMount() {\n    const { terminal } = this.props;\n    terminal.setAdapter(adapterMapper[0].key);\n  }\n\n  onEnterKeyDown = e => {\n    const { user, terminal } = this.props;\n\n    if (e.keyCode === 13) {\n      const text = e.target.value;\n      terminal.onEnterKeyDown(text !== \"\" ? text : \" \");\n      e.target.value = \"\";\n    }\n  };\n\n  adapterHandler = e => {\n    const { terminal } = this.props;\n    terminal.setAdapter(adapterMapper[e.key].key);\n  };\n\n  actionHandler = e => {\n    const { terminal } = this.props;\n    terminal.handleAction(e.key);\n  };\n\n  render() {\n    const { user, terminal } = this.props;\n    const histories = terminal.getHistories.map((text, idx) => {\n      return (\n        <li key={idx}>\n          <ConsoleLine idx={idx} text={text} name={user.username} />\n        </li>\n      );\n    });\n\n    return (\n      <div>\n        <div className=\"console-header\">\n            <h3 style={{\"color\": \"white\"}}>Adapter: {terminal.getAdapterName}</h3>\n          <ActionPullDown\n            title={\"ADAPTER\"}\n            menuList={adapterMapper}\n            handleMenuClick={this.adapterHandler}\n          />\n          <ActionPullDown\n            title={\"ACTION\"}\n            menuList={terminal.actionEvents}\n            handleMenuClick={this.actionHandler}\n          />\n        </div>\n        <ul className=\"console-list\">\n          {histories}\n          <li key={1}>\n            <ConsoleLine\n              onEnterKeyDown={this.onEnterKeyDown}\n              name={user.username}\n            />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Console;\n","import { action, decorate } from \"mobx\";\n\nclass UiState {\n    \n    manager;\n\n    toggleSideBar = () => {\n        this.manager.updateSize();\n    }\n\n    getSelectedItem = () => {\n        return this.manager.getSelectedItem\n    }\n\n    setGoldenLayoutManager = (manager) => {\n        this.manager = manager;\n    }\n\n    closeAll = () => {\n        this.manager.closeAll();\n    }\n\n    openAll = componentsList => {\n        this.manager.openAll(componentsList);\n    }\n}\n\nexport default decorate(UiState, {\n    toggleSideBar: action,\n    getSelectedItem: action,\n    closeAll: action,\n    openAll: action\n});","import { observable, action, computed, decorate } from \"mobx\";\n\nclass Example {\n\n    isProcessing = false;\n    who = {\n        name: 'hoge',\n        desc: 'iam example stete class'\n    }\n    \n    startProcessing() {\n        this.isProcessing = true;\n    }\n\n    stopProcessing() {\n        this.isProcessing = false;\n    }\n\n    get whoAmI() {\n        const state = this.isProcessing ? 'Processing' : 'Sleeping'\n        return `name <${this.who.name}> : description ${this.who.desc} ${state}`\n    }\n\n}\n\nexport default decorate(Example, {\n    isProcessing: observable,\n    startProcessing: action,\n    stopProcessing: action,\n    whoAmI: computed\n})","import { action, observable, computed, decorate } from \"mobx\";\n\nclass User {\n\n    username;\n    status;\n\n    updateUserInfo(username, status) {\n        this.username = username;\n        this.status = status;\n    }\n\n    get getUserInfo() {\n        return `NAME: ${this.username} STATUS: ${this.status}`;\n    }\n}\n\nexport default decorate(User, {\n    username: observable,\n    status: observable,\n    updateUserInfo: action,\n    getUserInfo: computed\n});","import { action, observable, decorate, computed } from \"mobx\";\n\nclass Terminal {\n  histories = [];\n  adapter;\n\n  setAdapter = adapter => {\n    this.adapter = adapter;\n  };\n\n  get getAdapterName () {\n    return this.adapter ? this.adapter._name : '';\n  };\n\n  get getHistories() {\n    const length = this.histories.length;\n    return (\n      this.histories.slice(length < 20 ? 0 : length - 20, length) ||\n      this.histories\n    );\n  }\n\n  onEnterKeyDown = line => {\n    this._sendRequest(line);\n    this.histories.push(line);\n  };\n\n  handleAction = idx => {\n    this.actionEvents[idx][\"func\"]();\n  };\n\n  _clearHistories = () => {\n    this.histories = [];\n  };\n\n  _reCallHistory = idx => {\n    console.log('Wait for release...');\n  };\n\n  _sendRequest = async cmd => {\n    const result = await this.adapter.get(cmd);\n    this._receive(result);\n  };\n\n  _receive = res => {\n    console.log(res);\n  };\n\n  actionEvents = [\n    { title: \"Clear Console\", func: this._clearHistories },\n    { title: \"Recall\", func: this._reCallHistory }\n  ];\n}\n\nexport default decorate(Terminal, {\n  histories: observable,\n  adapter: observable,\n  getAdapterName: computed,\n  getHistories: computed,\n  onEnterClick: action,\n  handleAction: action,\n  setAdapter: action\n});\n","import UiState from 'store/uistate';\nimport Example from 'store/example';\nimport User from 'store/user';\nimport Terminal from 'store/terminal';\n\n\nconst store = {\n    uiState: new UiState(),\n    example: new Example(),\n    user: new User(),\n    terminal: new Terminal(),\n};\n\nexport default store;","import { observer } from 'mobx-react';\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\nimport Console from 'pages/Console';\n\nimport store from 'store';\n\nconst ItemConfig = [\n  { title: \"home\", type: \"react-component\", key: \"home\", component: observer(Home), props: { store: store } },\n  { title: \"Login\", type: \"react-component\", key: \"login\", component: observer(Login), props: { store: store.user } },\n  { title: \"Terminal\", type: \"react-component\", key: \"console\", component: observer(Console), props: { user: store.user, terminal: store.terminal } }  \n];\n\nexport { ItemConfig };","import { ItemConfig } from \"panels/panelDefs\";\n\nclass GoldenLayoutManager {\n\n    static instance;\n\n    static setInstance(instance) {\n        this.instance = instance;\n        this.initialize();\n    };\n\n    static initialize() {\n        this.registerComponent();\n        this.instance.init();\n        console.log('Successfully registered components!')\n    }\n\n    static registerComponent() {\n        ItemConfig.forEach(config => {\n          this.instance.registerComponent(config.key, config.component);\n        });\n    };\n\n    static updateSize() {\n        this.instance.updateSize();\n    }\n\n    static getSelectedItem() {\n        return this.instance.selectedItem;\n    }\n    \n    static getComponentConfig() {\n        return ItemConfig.map(item => {\n            return {title: item.title, key: item.key};\n        });\n    }\n\n    static openPanel(component) {\n          const targetComp = ItemConfig.find(item => {\n              return item.key === component;\n          });\n          const newItemConfig = {\n            title: component,\n            type: \"react-component\",\n            component: component,\n            props: targetComp.props\n          };\n          const lastItem = this.instance.root.contentItems;\n          lastItem[0].addChild(newItemConfig)\n    };\n\n    static closeAll() {\n        const contentItems = this.instance.root.contentItems || [];\n        if (contentItems.length > 0) {\n            while(contentItems[0].contentItems.length > 0) {\n                contentItems[0].removeChild(contentItems[0].contentItems[0])\n            }\n        }\n    }\n\n    static openAll() {\n        ItemConfig.forEach(component => {\n            this.openPanel(component.key);\n        })\n    }\n}\n\nexport default GoldenLayoutManager;","import React from \"react\";\nimport { Icon, Tooltip } from \"antd\";\n\nconst FolderMenuItem = props => {\n  const { isOpen, title } = props;\n  const name = isOpen ? \"folder-open\" : \"folder\";\n  return (\n    <span style={{ whiteSpace: \"nowrap\" }}>\n      <Icon type={name} style={{ marginRight: \"3px\" }} />\n      {title}\n    </span>\n  );\n};\n\nconst SideBarMenu = props => {\n  const { closeAll, openAll } = props;\n  return (\n    <div>\n      <ul className=\"sidebar-menu\">\n        <li className=\"sidebar-menu-item\">\n          <Tooltip placement=\"bottomRight\" title=\"Open All Tabs\">\n            <span onClick={openAll}>\n              <Icon type=\"folder-open\" />\n            </span>\n          </Tooltip>\n        </li>\n        <li className=\"sidebar-menu-item\">\n          <Tooltip placement=\"bottomRight\" title=\"Close All Tabs\">\n            <span onClick={closeAll}>\n              <Icon type=\"close-square\" />\n            </span>\n          </Tooltip>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport { FolderMenuItem, SideBarMenu };\n","import React from \"react\";\nimport GoldenLayoutManager from \"panels/GoldenLayoutManager\";\nimport { FolderMenuItem, SideBarMenu } from \"components/Icon\";\n\nconst COMPONENT_CONFIG =  GoldenLayoutManager.getComponentConfig();\n\nclass SideBar extends React.PureComponent {\n\n  onClickMenuItem = componentName => {\n    GoldenLayoutManager.openPanel(componentName);\n  };\n\n  render() {\n    return (\n      <div className=\"fit sidebar\">\n        <div className=\"sidebar-title\">\n          <h4>TITLE</h4>\n        </div>\n        <SideBarMenu openAll={this.props.openAll} closeAll={this.props.closeAll} />\n        <ul id=\"menu-container\">\n          {COMPONENT_CONFIG.map(conf =>{\n            return <MenuItem key={conf.key} title={conf.title} componentName={conf.key} onClick={this.onClickMenuItem} />\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst MenuItem = props => {\n  const { title, onClick, componentName } = props;\n  return (\n    <li className=\"sidebar-tab-item\" onClick={() => onClick(componentName)}>\n      <FolderMenuItem\n        title={title}\n        isOpen={false}\n      />\n    </li>\n  );\n};\n\nexport default SideBar;\n","const GoldenLayoutConfig = {\n  settings: {\n    hasHeaders: true,\n    constrainDragToContainer: true,\n    reorderEnabled: true,\n    selectionEnabled: true,\n    popoutWholeStack: false,\n    blockedPopoutsThrowError: true,\n    closePopoutsOnUnload: true,\n    showPopoutIcon: true,\n    showMaximiseIcon: true,\n    showCloseIcon: true\n  },\n  dimensions: {\n    borderWidth: 10,\n    minItemHeight: 50,\n    minItemWidth: 50,\n    headerHeight: 20,\n    dragProxyWidth: 300,\n    dragProxyHeight: 200\n  },\n  labels: {\n    close: \"close\",\n    maximise: \"maximise\",\n    minimise: \"minimise\",\n    popout: \"open in new window\"\n  },\n  content: [\n    {\n      type: \"row\",\n      isClosable: false,\n      content: []\n    }\n  ]\n};\n\nexport { GoldenLayoutConfig };","import React from \"react\";\nimport GoldenLayout from \"golden-layout\";\nimport SplitPane from \"react-splitter-layout\";\nimport SideBar from \"panels/SideBar\";\nimport GoldenLayoutManager from \"panels/GoldenLayoutManager\";\nimport { GoldenLayoutConfig } from \"config\";\n\nconst SIDEBAR_MIN_SIZE = 0;\nconst PANEL_MIN_SIZE = 85;\nconst PANEL_INITIALIZE_SIZE = 90;\nconst CUSTOM_SPLITTER_CLASSNAME = \"custom-splitter\";\n\nexport class Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.node = React.createRef();\n  }\n  componentDidMount() {\n    const instance = new GoldenLayout(\n      GoldenLayoutConfig,\n      window.$(\"#gl-container\")\n    );\n    GoldenLayoutManager.setInstance(instance);\n    this.props.store.uiState.setGoldenLayoutManager(GoldenLayoutManager);\n  }\n\n  render() {\n    const { uiState, user } = this.props.store;\n\n    return (\n      <div className=\"fit\">\n        <SplitPane\n         customClassName={CUSTOM_SPLITTER_CLASSNAME} \n          percentage={true}\n          secondaryInitialSize={PANEL_INITIALIZE_SIZE}\n          onDragEnd={uiState.toggleSideBar}\n          primaryMinSize={SIDEBAR_MIN_SIZE}\n          secondaryMinSize={PANEL_MIN_SIZE}\n        >\n          <SideBar openAll={uiState.openAll} closeAll={uiState.closeAll} toggleSideBar={uiState.toggleSideBar} />\n          <div id=\"gl-container\">\n            <div className=\"container-header\">\n              <h4>{user.username ? `${user.username}$ ${user.getUserInfo}` : 'Please Login...'}</h4>\n            </div>\n            <div ref={node => (this.node = node)} />\n          </div>\n        </SplitPane>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Home } from 'panels/Home';\nimport \"golden-layout/src/css/goldenlayout-base.css\";\nimport \"golden-layout/src/css/goldenlayout-dark-theme.css\";\nimport \"react-splitter-layout/lib/index.css\";\nimport 'antd/dist/antd.css';\nimport 'index.css';\nimport store from 'store';\nimport { observer } from 'mobx-react';\n\nobserver(Home)\n\nfunction App() {\n  return (\n    <div className=\"fit\">\n      <Home store={store} ref={React.createRef()}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport $ from \"jquery\";\n\nfunction init() {\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n    window.$ = $;\n}\n\nexport { init };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { init } from 'initialize';\n\n\ninit();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}