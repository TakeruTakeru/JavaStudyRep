{"version":3,"sources":["components/DataEntry.js","pages/Home.js","pages/Login.js","store/uistate.js","store/example.js","store/user.js","store/index.js","panels/panelDefs.js","panels/GoldenLayoutManager.js","components/Icon.js","panels/SideBar.js","config.js","panels/Home.js","App.js","serviceWorker.js","initialize.js","index.js"],"names":["Search","Input","SearchBase","props","placeholder","onSearch","width","react_default","a","createElement","onPressEnter","e","target","value","style","concat","WrapperForm","Form","create","name","onSubmit","_props$form","form","getFieldDecorator","getFieldError","isFieldTouched","usernameError","passwordError","es_form","layout","preventDefault","validateFields","err","values","Item","validateStatus","help","rules","required","message","input","prefix","icon","type","color","es_button","htmlType","Home","example","this","store","isProcessing","onClick","startProcessing","stopProcessing","whoAmI","React","PureComponent","Login","_this","updateUserInfo","username","password","_this$props$store","status","title","stats","textAlign","fontSize","margin","marginTop","decorate","toggleSideBar","manager","updateSize","getSelectedItem","setGoldenLayoutManager","closeAll","openAll","componentsList","action","Example","who","desc","state","observable","computed","User","getUserInfo","uiState","UiState","user","ItemConfig","key","component","id","className","DataEntry_SearchBase","observer","GoldenLayoutManager","instance","initialize","registerComponent","init","console","log","forEach","config","selectedItem","map","item","targetComp","find","newItemConfig","root","contentItems","addChild","length","removeChild","_this2","openPanel","FolderMenuItem","isOpen","whiteSpace","marginRight","SideBarMenu","tooltip","placement","COMPONENT_CONFIG","getComponentConfig","SideBar","onClickMenuItem","componentName","Icon_SideBarMenu","conf","SideBar_MenuItem","MenuItem","Icon_FolderMenuItem","GoldenLayoutConfig","settings","hasHeaders","constrainDragToContainer","reorderEnabled","selectionEnabled","popoutWholeStack","blockedPopoutsThrowError","closePopoutsOnUnload","showPopoutIcon","showMaximiseIcon","showCloseIcon","dimensions","borderWidth","minItemHeight","minItemWidth","headerHeight","dragProxyWidth","dragProxyHeight","labels","close","maximise","minimise","popout","content","isClosable","_React$PureComponent","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","node","createRef","inherits","createClass","GoldenLayout","window","$","setInstance","lib_default","customClassName","percentage","secondaryInitialSize","onDragEnd","primaryMinSize","secondaryMinSize","panels_SideBar","ref","App","panels_Home_Home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uTAIQA,EAAWC,IAAXD,OAEFE,EAAa,SAAAC,GAAS,IAChBC,EAAiCD,EAAjCC,YAAaC,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MAC/B,OACIC,EAAAC,EAAAC,cAACT,EAAD,CACAI,YAAaA,EACbC,SAAUA,EACVK,aAAc,SAAAC,GAAC,OAAIN,EAASM,EAAEC,OAAOC,QACrCC,MAAO,CAAER,MAAA,GAAAS,OAAYT,EAAZ,UAoDXU,EAAcC,IAAKC,OAAO,CAAEC,KAAM,aAApBF,CA/CF,SAAAd,GAAS,IACjBiB,EAAajB,EAAbiB,SADiBC,EAYoClB,EAAMmB,KAA3DC,EAZiBF,EAYjBE,kBAAmBC,EAZFH,EAYEG,cAAeC,EAZjBJ,EAYiBI,eACpCC,EAAgBD,EAAe,aAAeD,EAAc,YAC5DG,EAAgBF,EAAe,aAAeD,EAAc,YAClE,OACEjB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,OAAO,WAAWT,SAbL,SAAAT,GACnBA,EAAEmB,iBACF3B,EAAMmB,KAAKS,eAAe,SAACC,EAAKC,GACzBD,GACHZ,EAASa,OAUT1B,EAAAC,EAAAC,cAACmB,EAAA,EAAKM,KAAN,CAAWC,eAAgBT,EAAgB,QAAU,GAAIU,KAAMV,GAAiB,IAC7EH,EAAkB,WAAY,CAC7Bc,MAAO,CAAC,CAAEC,UAAU,EAAOC,QAAS,iCADrChB,CAGChB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACEC,OAAQlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAMC,KAAK,OAAO7B,MAAO,CAAE8B,MAAO,qBAC1CxC,YAAY,eAIlBG,EAAAC,EAAAC,cAACmB,EAAA,EAAKM,KAAN,CAAWC,eAAgBR,EAAgB,QAAU,GAAIS,KAAMT,GAAiB,IAC7EJ,EAAkB,WAAY,CAC7Bc,MAAO,CAAC,CAAEC,UAAU,EAAOC,QAAS,iCADrChB,CAGChB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACEC,OAAQlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAMC,KAAK,OAAO7B,MAAO,CAAE8B,MAAO,qBAC1CD,KAAK,WACLvC,YAAY,eAIlBG,EAAAC,EAAAC,cAACmB,EAAA,EAAKM,KAAN,KACE3B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAQF,KAAK,UAAUG,SAAS,UAAhC,aC/BKC,mLAtBJ,IACCC,EAAYC,KAAK9C,MAAM+C,MAAvBF,QACFG,EAAeH,EAAQG,aAAe5C,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,4BAA8BF,EAAAC,EAAAC,cAAA,sBAC/E,OACEF,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAE8B,MAAO,UACnBrC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAQO,QAAS,kBAAMJ,EAAQK,oBAA/B,SACA9C,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAQO,QAAS,kBAAMJ,EAAQM,mBAA/B,QACA/C,EAAAC,EAAAC,cAAA,WACG0C,EACD5C,EAAAC,EAAAC,cAAA,SAAIuC,EAAQO,kBAfLC,IAAMC,eCiCVC,6MAhCbtC,SAAW,SAAAT,GACTgD,EAAKxD,MAAM+C,MAAMU,eAAejD,EAAEkD,SAAUlD,EAAEmD,mFAGvC,IAAAC,EACsBd,KAAK9C,MAAM+C,MAAhCW,EADDE,EACCF,SAAUG,EADXD,EACWC,OACZC,EAAK,SAAAlD,OAAY8C,GAAY,GAAxB,MACLK,EACO,SAAXF,EACI,wBACW,SAAXA,EACA,mBACA,GACN,OACEzD,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEqD,UAAW,SAAUC,SAAU,WAC3C7D,EAAAC,EAAAC,cAAA,OACEK,MAAO,CACLR,MAAO,QACP6D,UAAW,SACXE,OAAQ,OACRC,UAAW,UAGb/D,EAAAC,EAAAC,cAAA,MAAIK,MAAO,CAAE8B,MAAO,UAAYqB,GAChC1D,EAAAC,EAAAC,cAAA,KAAGK,MAAO,CAAE8B,MAAO,QAASyB,OAAQ,QAAUH,GAC9C3D,EAAAC,EAAAC,cAACO,EAAD,CAAWI,SAAU6B,KAAK7B,oBA1BhBoC,IAAMC,sBCwBXc,+DArBXC,cAAgB,WACZb,EAAKc,QAAQC,mBAGjBC,gBAAkB,WACd,OAAOhB,EAAKc,QAAQE,sBAGxBC,uBAAyB,SAACH,GACtBd,EAAKc,QAAUA,QAGnBI,SAAW,WACPlB,EAAKc,QAAQI,iBAGjBC,QAAU,SAAAC,GACNpB,EAAKc,QAAQK,QAAQC,KAII,CAC7BP,cAAeQ,IACfL,gBAAiBK,IACjBH,SAAUG,IACVF,QAASE,MC7BPC,mDAEF9B,cAAe,OACf+B,IAAM,CACF/D,KAAM,OACNgE,KAAM,yFAINlC,KAAKE,cAAe,2CAIpBF,KAAKE,cAAe,iCAIpB,IAAMiC,EAAQnC,KAAKE,aAAe,aAAe,WACjD,eAAApC,OAAgBkC,KAAKiC,IAAI/D,KAAzB,oBAAAJ,OAAgDkC,KAAKiC,IAAIC,KAAzD,KAAApE,OAAiEqE,YAK1Db,cAASU,EAAS,CAC7B9B,aAAckC,IACdhC,gBAAiB2B,IACjB1B,eAAgB0B,IAChBzB,OAAQ+B,MC3BNC,yGAKa1B,EAAUG,GACrBf,KAAKY,SAAWA,EAChBZ,KAAKe,OAASA,sCAId,eAAAjD,OAAgBkC,KAAKY,SAArB,aAAA9C,OAAyCkC,KAAKe,iBAIvCO,cAASgB,EAAM,CAC1B1B,SAAUwB,IACVrB,OAAQqB,IACRzB,eAAgBoB,IAChBQ,YAAaF,MCXFpC,EAND,CACVuC,QAAS,IAAIC,EACb1C,QAAS,IAAIiC,EACbU,KAAM,IAAIJ,GCsBRK,EAAa,CACjB,CAAE3B,MAAO,SAAUtB,KAAM,kBAAmBkD,IAAK,QAASC,2LApBtD,OACEvF,EAAAC,EAAAC,cAAA,OAAKsF,GAAG,QAAQC,UAAU,OACxBzF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACwF,EAAD,CAAQ3F,MAAO,IAAKD,SAAU4C,KAAK9C,MAAME,mBAL/BmD,IAAMC,gBAuBxB,CAAEQ,MAAO,SAAUtB,KAAM,kBAAmBkD,IAAK,QAASC,2LAVtD,OACEvF,EAAAC,EAAAC,cAAA,OAAKsF,GAAG,QAAQC,UAAU,OACxBzF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACwF,EAAD,CAAQ3F,MAAO,IAAKD,SAAU4C,KAAK9C,MAAME,mBAL7BmD,IAAMC,gBAa1B,CAAEQ,MAAO,OAAQtB,KAAM,kBAAmBkD,IAAK,OAAQC,UAAWI,YAASnD,GAAO5C,MAAO,CAAE+C,MAAOA,IAClG,CAAEe,MAAO,QAAStB,KAAM,kBAAmBkD,IAAK,QAASC,UAAWI,YAASxC,GAAQvD,MAAO,CAAE+C,MAAOA,EAAMyC,QCkC9FQ,2GA7DQC,GACfnD,KAAKmD,SAAWA,EAChBnD,KAAKoD,kDAILpD,KAAKqD,oBACLrD,KAAKmD,SAASG,OACdC,QAAQC,IAAI,mFAGW,IAAA9C,EAAAV,KACvB2C,EAAWc,QAAQ,SAAAC,GACjBhD,EAAKyC,SAASE,kBAAkBK,EAAOd,IAAKc,EAAOb,kDAKrD7C,KAAKmD,SAAS1B,uDAId,OAAOzB,KAAKmD,SAASQ,0DAIrB,OAAOhB,EAAWiB,IAAI,SAAAC,GAClB,MAAO,CAAC7C,MAAO6C,EAAK7C,MAAO4B,IAAKiB,EAAKjB,yCAI5BC,GACX,IAAMiB,EAAanB,EAAWoB,KAAK,SAAAF,GAC/B,OAAOA,EAAKjB,MAAQC,IAElBmB,EAAgB,CACpBhD,MAAO6B,EACPnD,KAAM,kBACNmD,UAAWA,EACX3F,MAAO4G,EAAW5G,OAEH8C,KAAKmD,SAASc,KAAKC,aAC3B,GAAGC,SAASH,sCAIvB,IAAME,EAAelE,KAAKmD,SAASc,KAAKC,cAAgB,GACxD,GAAIA,EAAaE,OAAS,EACtB,KAAMF,EAAa,GAAGA,aAAaE,OAAS,GACxCF,EAAa,GAAGG,YAAYH,EAAa,GAAGA,aAAa,sCAKpD,IAAAI,EAAAtE,KACb2C,EAAWc,QAAQ,SAAAZ,GACfyB,EAAKC,UAAU1B,EAAUD,yBC3D/B4B,EAAiB,SAAAtH,GAAS,IACtBuH,EAAkBvH,EAAlBuH,OAAQzD,EAAU9D,EAAV8D,MACV9C,EAAOuG,EAAS,cAAgB,SACtC,OACEnH,EAAAC,EAAAC,cAAA,QAAMK,MAAO,CAAE6G,WAAY,WACzBpH,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAMC,KAAMxB,EAAML,MAAO,CAAE8G,YAAa,SACvC3D,IAKD4D,EAAc,SAAA1H,GAAS,IACnB0E,EAAsB1E,EAAtB0E,SAAUC,EAAY3E,EAAZ2E,QAClB,OACEvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIuF,UAAU,gBACZzF,EAAAC,EAAAC,cAAA,MAAIuF,UAAU,qBACZzF,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAASC,UAAU,cAAc9D,MAAM,iBACrC1D,EAAAC,EAAAC,cAAA,QAAM2C,QAAS0B,GACbvE,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAMC,KAAK,mBAIjBpC,EAAAC,EAAAC,cAAA,MAAIuF,UAAU,qBACZzF,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAASC,UAAU,cAAc9D,MAAM,kBACrC1D,EAAAC,EAAAC,cAAA,QAAM2C,QAASyB,GACbtE,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAMC,KAAK,uBCzBnBqF,EAAoB7B,EAAoB8B,qBAExCC,6MAEJC,gBAAkB,SAAAC,GAChBjC,EAAoBqB,UAAUY,4EAGvB,IAAAb,EAAAtE,KACP,OACE1C,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,eACbzF,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,iBACbzF,EAAAC,EAAAC,cAAA,oBAEFF,EAAAC,EAAAC,cAAC4H,EAAD,CAAavD,QAAS7B,KAAK9C,MAAM2E,QAASD,SAAU5B,KAAK9C,MAAM0E,WAC/DtE,EAAAC,EAAAC,cAAA,MAAIsF,GAAG,kBACJiC,EAAiBnB,IAAI,SAAAyB,GACpB,OAAO/H,EAAAC,EAAAC,cAAC8H,EAAD,CAAU1C,IAAKyC,EAAKzC,IAAK5B,MAAOqE,EAAKrE,MAAOmE,cAAeE,EAAKzC,IAAKzC,QAASmE,EAAKY,6BAfhF3E,IAAMC,eAuBtB+E,EAAW,SAAArI,GAAS,IAChB8D,EAAkC9D,EAAlC8D,MAAOb,EAA2BjD,EAA3BiD,QAASgF,EAAkBjI,EAAlBiI,cACxB,OACE7H,EAAAC,EAAAC,cAAA,MAAIuF,UAAU,mBAAmB5C,QAAS,kBAAMA,EAAQgF,KACtD7H,EAAAC,EAAAC,cAACgI,EAAD,CACExE,MAAOA,EACPyD,QAAQ,MAMDQ,ICzCTQ,EAAqB,CACzBC,SAAU,CACRC,YAAY,EACZC,0BAA0B,EAC1BC,gBAAgB,EAChBC,kBAAkB,EAClBC,kBAAkB,EAClBC,0BAA0B,EAC1BC,sBAAsB,EACtBC,gBAAgB,EAChBC,kBAAkB,EAClBC,eAAe,GAEjBC,WAAY,CACVC,YAAa,GACbC,cAAe,GACfC,aAAc,GACdC,aAAc,GACdC,eAAgB,IAChBC,gBAAiB,KAEnBC,OAAQ,CACNC,MAAO,QACPC,SAAU,WACVC,SAAU,WACVC,OAAQ,sBAEVC,QAAS,CACP,CACEvH,KAAM,MACNwH,YAAY,EACZD,QAAS,MCnBFnH,EAAb,SAAAqH,GACE,SAAArH,EAAY5C,GAAO,IAAAwD,EAAA,OAAA0G,OAAAC,EAAA,EAAAD,CAAApH,KAAAF,IACjBY,EAAA0G,OAAAE,EAAA,EAAAF,CAAApH,KAAAoH,OAAAG,EAAA,EAAAH,CAAAtH,GAAA0H,KAAAxH,KAAM9C,KACDuK,KAAOlH,IAAMmH,YAFDhH,EADrB,OAAA0G,OAAAO,EAAA,EAAAP,CAAAtH,EAAAqH,GAAAC,OAAAQ,EAAA,EAAAR,CAAAtH,EAAA,EAAA8C,IAAA,oBAAAhF,MAAA,WAMI,IAAMuF,EAAW,IAAI0E,IACnBpC,EACAqC,OAAOC,EAAE,kBAEX7E,EAAoB8E,YAAY7E,GAChCnD,KAAK9C,MAAM+C,MAAMuC,QAAQb,uBAAuBuB,KAXpD,CAAAN,IAAA,SAAAhF,MAAA,WAcW,IAAA0G,EAAAtE,KACCwC,EAAYxC,KAAK9C,MAAM+C,MAAvBuC,QAER,OACElF,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,OACbzF,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CACC2K,gBAtByB,kBAuBxBC,YAAY,EACZC,qBAzBoB,GA0BpBC,UAAW7F,EAAQjB,cACnB+G,eA7Be,EA8BfC,iBA7Ba,IA+BbjL,EAAAC,EAAAC,cAACgL,EAAD,CAAS3G,QAASW,EAAQX,QAASD,SAAUY,EAAQZ,SAAUL,cAAeiB,EAAQjB,gBACtFjE,EAAAC,EAAAC,cAAA,OAAKsF,GAAG,gBACNxF,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,oBACbzF,EAAAC,EAAAC,cAAA,UAAKwC,KAAK9C,MAAM+C,MAAMyC,KAAK9B,SAAtB,GAAA9C,OAAoCkC,KAAK9C,MAAM+C,MAAMyC,KAAK9B,SAA1D,MAAA9C,OAAuEkC,KAAK9C,MAAM+C,MAAMyC,KAAKH,aAAgB,oBAEpHjF,EAAAC,EAAAC,cAAA,OAAKiL,IAAK,SAAAhB,GAAI,OAAKnD,EAAKmD,KAAOA,YAhC3C3H,EAAA,CAA0BS,IAAMC,kDCFhCyC,YAASnD,GAUM4I,MARf,WACE,OACEpL,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,OACbzF,EAAAC,EAAAC,cAACmL,EAAD,CAAM1I,MAAOA,EAAOwI,IAAKlI,IAAMmH,gBCHjBkB,QACW,cAA7Bd,OAAOe,SAASC,UAEe,UAA7BhB,OAAOe,SAASC,UAEhBhB,OAAOe,SAASC,SAASC,MACvB,gFCbFjB,OAAOvH,MAAQA,IACfuH,OAAOkB,SAAWA,IAClBlB,OAAOC,EAAIA,ICCfiB,IAASC,OAAO3L,EAAAC,EAAAC,cAAC0L,EAAD,MAASC,SAASC,eAAe,SFyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0649c3c5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, Icon, Input, Button } from 'antd';\n\n\nconst { Search } = Input;\n\nconst SearchBase = props => {\n    const { placeholder, onSearch, width } = props;\n    return (\n        <Search\n        placeholder={placeholder}\n        onSearch={onSearch}\n        onPressEnter={e => onSearch(e.target.value)}\n        style={{ \"width\": `${width}px` }}\n      />\n    )\n};\n\nconst LoginForm = props => {\n  const { onSubmit } = props;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    });\n}\n\n  const { getFieldDecorator, getFieldError, isFieldTouched } = props.form;\n  const usernameError = isFieldTouched('username') && getFieldError('username');\n  const passwordError = isFieldTouched('password') && getFieldError('password');\n  return (\n    <Form layout=\"vertical\" onSubmit={handleSubmit}>\n        <Form.Item validateStatus={usernameError ? 'error' : ''} help={usernameError || ''}>\n          {getFieldDecorator('username', {\n            rules: [{ required: false, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item validateStatus={passwordError ? 'error' : ''} help={passwordError || ''}>\n          {getFieldDecorator('password', {\n            rules: [{ required: false, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" >\n            Login\n          </Button>\n        </Form.Item>\n      </Form>\n  )\n}\n\nconst WrapperForm = Form.create({ name: 'LoginForm' })(LoginForm)\nexport { SearchBase as Search, WrapperForm as LoginForm };\n","import React from \"react\";\nimport { Button } from \"antd\";\n\nclass Home extends React.PureComponent {\n  render() {\n    const { example } = this.props.store;\n    const isProcessing = example.isProcessing ? <div><p>Now Loading...</p></div> : <p>Sleeping.</p>\n    return (\n      <div style={{ color: \"white\" }}>\n        <div>\n          <h3>Home Menu</h3>\n        </div>\n        <div>\n          <h5>Example Usages</h5>\n          <Button onClick={() => example.startProcessing()}>Start</Button>\n          <Button onClick={() => example.stopProcessing()}>Stop</Button>\n          <div>\n            {isProcessing}\n            <p>{example.whoAmI}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { LoginForm } from \"components/DataEntry\";\n\nclass Login extends React.PureComponent {\n  onSubmit = e => {\n    this.props.store.updateUserInfo(e.username, e.password);\n  };\n\n  render() {\n    const { username, status } = this.props.store;\n    const title = `Hello ${username || \"\"}!!`;\n    const stats =\n      status === \"fine\"\n        ? \"You look good today!!\"\n        : status === \"soso\"\n        ? \"Have a nice day!\"\n        : \"\";\n    return (\n      <div style={{ textAlign: \"center\", fontSize: \"1.3rem\" }}>\n        <div\n          style={{\n            width: \"250px\",\n            textAlign: \"center\",\n            margin: \"auto\",\n            marginTop: \"200px\"\n          }}\n        >\n          <h3 style={{ color: \"white\" }}>{title}</h3>\n          <p style={{ color: \"white\", margin: \"0px\" }}>{stats}</p>\n          <LoginForm onSubmit={this.onSubmit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import { action, decorate } from \"mobx\";\n\nclass UiState {\n    \n    manager;\n\n    toggleSideBar = () => {\n        this.manager.updateSize();\n    }\n\n    getSelectedItem = () => {\n        return this.manager.getSelectedItem\n    }\n\n    setGoldenLayoutManager = (manager) => {\n        this.manager = manager;\n    }\n\n    closeAll = () => {\n        this.manager.closeAll();\n    }\n\n    openAll = componentsList => {\n        this.manager.openAll(componentsList);\n    }\n}\n\nexport default decorate(UiState, {\n    toggleSideBar: action,\n    getSelectedItem: action,\n    closeAll: action,\n    openAll: action\n});","import { observable, action, computed, decorate } from \"mobx\";\n\nclass Example {\n\n    isProcessing = false;\n    who = {\n        name: 'hoge',\n        desc: 'iam example stete class'\n    }\n    \n    startProcessing() {\n        this.isProcessing = true;\n    }\n\n    stopProcessing() {\n        this.isProcessing = false;\n    }\n\n    get whoAmI() {\n        const state = this.isProcessing ? 'Processing' : 'Sleeping'\n        return `name <${this.who.name}> : description ${this.who.desc} ${state}`\n    }\n\n}\n\nexport default decorate(Example, {\n    isProcessing: observable,\n    startProcessing: action,\n    stopProcessing: action,\n    whoAmI: computed\n})","import { action, observable, computed, decorate } from \"mobx\";\n\nclass User {\n\n    username;\n    status;\n\n    updateUserInfo(username, status) {\n        this.username = username;\n        this.status = status;\n    }\n\n    get getUserInfo() {\n        return `NAME: ${this.username} STATUS: ${this.status}`;\n    }\n}\n\nexport default decorate(User, {\n    username: observable,\n    status: observable,\n    updateUserInfo: action,\n    getUserInfo: computed\n});","import UiState from 'store/uistate';\nimport Example from 'store/example';\nimport User from 'store/user';\n\nconst store = {\n    uiState: new UiState(),\n    example: new Example(),\n    user: new User(),\n};\n\nexport default store;","import React from \"react\";\nimport { observer } from 'mobx-react';\nimport { Search } from \"components/DataEntry\";\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\n\nimport store from 'store';\n\nclass HogeA extends React.PureComponent {\n    render() {\n      return (\n        <div id=\"panel\" className=\"fit\">\n          <h2>hogeA</h2>\n          <Search width={100} onSearch={this.props.onSearch} />\n        </div>\n      );\n    }\n  }\n  \n  class HogeB extends React.PureComponent {\n    render() {\n      return (\n        <div id=\"panel\" className=\"fit\">\n          <h2>hogeB</h2>\n          <Search width={100} onSearch={this.props.onSearch} />\n        </div>\n      );\n    }\n  }\nconst ItemConfig = [\n  { title: \"Hoge_A\", type: \"react-component\", key: \"hogeA\", component: HogeA },\n  { title: \"Hoge_B\", type: \"react-component\", key: \"hogeB\", component: HogeB },\n  { title: \"home\", type: \"react-component\", key: \"home\", component: observer(Home), props: { store: store } },\n  { title: \"Login\", type: \"react-component\", key: \"login\", component: observer(Login), props: { store: store.user } },\n];\n\nexport { ItemConfig };","import { ItemConfig } from \"panels/panelDefs\";\n\nclass GoldenLayoutManager {\n\n    static instance;\n\n    static setInstance(instance) {\n        this.instance = instance;\n        this.initialize();\n    };\n\n    static initialize() {\n        this.registerComponent();\n        this.instance.init();\n        console.log('Successfully registered components!')\n    }\n\n    static registerComponent() {\n        ItemConfig.forEach(config => {\n          this.instance.registerComponent(config.key, config.component);\n        });\n    };\n\n    static updateSize() {\n        this.instance.updateSize();\n    }\n\n    static getSelectedItem() {\n        return this.instance.selectedItem;\n    }\n    \n    static getComponentConfig() {\n        return ItemConfig.map(item => {\n            return {title: item.title, key: item.key};\n        });\n    }\n\n    static openPanel(component) {\n          const targetComp = ItemConfig.find(item => {\n              return item.key === component;\n          });\n          const newItemConfig = {\n            title: component,\n            type: \"react-component\",\n            component: component,\n            props: targetComp.props\n          };\n          const lastItem = this.instance.root.contentItems;\n          lastItem[0].addChild(newItemConfig)\n    };\n\n    static closeAll() {\n        const contentItems = this.instance.root.contentItems || [];\n        if (contentItems.length > 0) {\n            while(contentItems[0].contentItems.length > 0) {\n                contentItems[0].removeChild(contentItems[0].contentItems[0])\n            }\n        }\n    }\n\n    static openAll() {\n        ItemConfig.forEach(component => {\n            this.openPanel(component.key);\n        })\n    }\n}\n\nexport default GoldenLayoutManager;","import React from \"react\";\nimport { Icon, Tooltip } from \"antd\";\n\nconst FolderMenuItem = props => {\n  const { isOpen, title } = props;\n  const name = isOpen ? \"folder-open\" : \"folder\";\n  return (\n    <span style={{ whiteSpace: \"nowrap\" }}>\n      <Icon type={name} style={{ marginRight: \"3px\" }} />\n      {title}\n    </span>\n  );\n};\n\nconst SideBarMenu = props => {\n  const { closeAll, openAll } = props;\n  return (\n    <div>\n      <ul className=\"sidebar-menu\">\n        <li className=\"sidebar-menu-item\">\n          <Tooltip placement=\"bottomRight\" title=\"Open All Tabs\">\n            <span onClick={openAll}>\n              <Icon type=\"folder-open\" />\n            </span>\n          </Tooltip>\n        </li>\n        <li className=\"sidebar-menu-item\">\n          <Tooltip placement=\"bottomRight\" title=\"Close All Tabs\">\n            <span onClick={closeAll}>\n              <Icon type=\"close-square\" />\n            </span>\n          </Tooltip>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport { FolderMenuItem, SideBarMenu };\n","import React from \"react\";\nimport GoldenLayoutManager from \"panels/GoldenLayoutManager\";\nimport { FolderMenuItem, SideBarMenu } from \"components/Icon\";\n\nconst COMPONENT_CONFIG =  GoldenLayoutManager.getComponentConfig();\n\nclass SideBar extends React.PureComponent {\n\n  onClickMenuItem = componentName => {\n    GoldenLayoutManager.openPanel(componentName);\n  };\n\n  render() {\n    return (\n      <div className=\"fit sidebar\">\n        <div className=\"sidebar-title\">\n          <h4>TITLE</h4>\n        </div>\n        <SideBarMenu openAll={this.props.openAll} closeAll={this.props.closeAll} />\n        <ul id=\"menu-container\">\n          {COMPONENT_CONFIG.map(conf =>{\n            return <MenuItem key={conf.key} title={conf.title} componentName={conf.key} onClick={this.onClickMenuItem} />\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst MenuItem = props => {\n  const { title, onClick, componentName } = props;\n  return (\n    <li className=\"sidebar-tab-item\" onClick={() => onClick(componentName)}>\n      <FolderMenuItem\n        title={title}\n        isOpen={false}\n      />\n    </li>\n  );\n};\n\nexport default SideBar;\n","const GoldenLayoutConfig = {\n  settings: {\n    hasHeaders: true,\n    constrainDragToContainer: true,\n    reorderEnabled: true,\n    selectionEnabled: true,\n    popoutWholeStack: false,\n    blockedPopoutsThrowError: true,\n    closePopoutsOnUnload: true,\n    showPopoutIcon: true,\n    showMaximiseIcon: true,\n    showCloseIcon: true\n  },\n  dimensions: {\n    borderWidth: 10,\n    minItemHeight: 50,\n    minItemWidth: 50,\n    headerHeight: 20,\n    dragProxyWidth: 300,\n    dragProxyHeight: 200\n  },\n  labels: {\n    close: \"close\",\n    maximise: \"maximise\",\n    minimise: \"minimise\",\n    popout: \"open in new window\"\n  },\n  content: [\n    {\n      type: \"row\",\n      isClosable: false,\n      content: []\n    }\n  ]\n};\n\nexport { GoldenLayoutConfig };","import React from \"react\";\nimport GoldenLayout from \"golden-layout\";\nimport SplitPane from \"react-splitter-layout\";\nimport SideBar from \"panels/SideBar\";\nimport GoldenLayoutManager from \"panels/GoldenLayoutManager\";\nimport { GoldenLayoutConfig } from \"config\";\n\nconst SIDEBAR_MIN_SIZE = 0;\nconst PANEL_MIN_SIZE = 85;\nconst PANEL_INITIALIZE_SIZE = 90;\nconst CUSTOM_SPLITTER_CLASSNAME = \"custom-splitter\";\n\nexport class Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.node = React.createRef();\n  }\n  componentDidMount() {\n    const instance = new GoldenLayout(\n      GoldenLayoutConfig,\n      window.$(\"#gl-container\")\n    );\n    GoldenLayoutManager.setInstance(instance);\n    this.props.store.uiState.setGoldenLayoutManager(GoldenLayoutManager);\n  }\n\n  render() {\n    const { uiState } = this.props.store;\n\n    return (\n      <div className=\"fit\">\n        <SplitPane\n         customClassName={CUSTOM_SPLITTER_CLASSNAME} \n          percentage={true}\n          secondaryInitialSize={PANEL_INITIALIZE_SIZE}\n          onDragEnd={uiState.toggleSideBar}\n          primaryMinSize={SIDEBAR_MIN_SIZE}\n          secondaryMinSize={PANEL_MIN_SIZE}\n        >\n          <SideBar openAll={uiState.openAll} closeAll={uiState.closeAll} toggleSideBar={uiState.toggleSideBar} />\n          <div id=\"gl-container\">\n            <div className=\"container-header\">\n              <h4>{this.props.store.user.username ? `${this.props.store.user.username}$ ${this.props.store.user.getUserInfo}` : 'Please Login...'}</h4>\n            </div>\n            <div ref={node => (this.node = node)} />\n          </div>\n        </SplitPane>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Home } from 'panels/Home';\nimport \"golden-layout/src/css/goldenlayout-base.css\";\nimport \"golden-layout/src/css/goldenlayout-dark-theme.css\";\nimport \"react-splitter-layout/lib/index.css\";\nimport 'antd/dist/antd.css';\nimport 'index.css';\nimport store from 'store';\nimport { observer } from 'mobx-react';\n\nobserver(Home)\n\nfunction App() {\n  return (\n    <div className=\"fit\">\n      <Home store={store} ref={React.createRef()}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport $ from \"jquery\";\n\nfunction init() {\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n    window.$ = $;\n}\n\nexport { init };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { init } from 'initialize';\n\n\ninit();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}