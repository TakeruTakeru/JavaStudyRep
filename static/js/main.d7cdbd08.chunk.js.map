{"version":3,"sources":["components/DataEntry.js","pages/Home.js","pages/Login.js","components/TextDisplayer.js","pages/Console.js","store/uistate.js","store/example.js","store/user.js","store/terminal.js","store/index.js","panels/panelDefs.js","panels/GoldenLayoutManager.js","components/Icon.js","panels/SideBar.js","config.js","panels/Home.js","App.js","serviceWorker.js","initialize.js","index.js"],"names":["Search","Input","SearchBase","props","placeholder","onSearch","width","react_default","a","createElement","onPressEnter","e","target","value","style","concat","WrapperForm","Form","create","name","onSubmit","_props$form","form","getFieldDecorator","getFieldError","isFieldTouched","usernameError","passwordError","es_form","layout","preventDefault","validateFields","err","values","Item","validateStatus","help","rules","required","message","input","prefix","es_icon","type","color","es_button","htmlType","ActionPullDown","title","menuList","handleMenuClick","menuItems","map","menu","es_menu","key","theme","onClick","dropdown","overlay","ghost","Home","example","this","store","isProcessing","startProcessing","stopProcessing","whoAmI","React","PureComponent","Login","_this","updateUserInfo","username","password","_this$props$store","status","stats","textAlign","fontSize","margin","marginTop","ConsoleLine","icon","onEnterKeyDown","text","userIcon","textLine","className","moment","format","onKeyDown","Console","_this$props","terminal","user","keyCode","actionHandler","delete","clearHistories","_this$props2","histories","getHistories","idx","TextDisplayer_ConsoleLine","DataEntry_ActionPullDown","decorate","toggleSideBar","manager","updateSize","getSelectedItem","setGoldenLayoutManager","closeAll","openAll","componentsList","action","Example","who","desc","state","observable","computed","User","getUserInfo","Terminal","line","push","length","slice","onEnterClick","uiState","UiState","ItemConfig","component","id","DataEntry_SearchBase","observer","GoldenLayoutManager","instance","initialize","registerComponent","init","console","log","forEach","config","selectedItem","item","targetComp","find","newItemConfig","root","contentItems","addChild","removeChild","_this2","openPanel","FolderMenuItem","isOpen","whiteSpace","marginRight","SideBarMenu","tooltip","placement","COMPONENT_CONFIG","getComponentConfig","SideBar","onClickMenuItem","componentName","Icon_SideBarMenu","conf","SideBar_MenuItem","MenuItem","Icon_FolderMenuItem","GoldenLayoutConfig","settings","hasHeaders","constrainDragToContainer","reorderEnabled","selectionEnabled","popoutWholeStack","blockedPopoutsThrowError","closePopoutsOnUnload","showPopoutIcon","showMaximiseIcon","showCloseIcon","dimensions","borderWidth","minItemHeight","minItemWidth","headerHeight","dragProxyWidth","dragProxyHeight","labels","close","maximise","minimise","popout","content","isClosable","_React$PureComponent","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","node","createRef","inherits","createClass","GoldenLayout","window","$","setInstance","lib_default","customClassName","percentage","secondaryInitialSize","onDragEnd","primaryMinSize","secondaryMinSize","panels_SideBar","ref","App","panels_Home_Home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7cdbd08.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, Icon, Input, Button, Dropdown, Menu } from \"antd\";\n\nconst { Search } = Input;\n\nconst SearchBase = props => {\n  const { placeholder, onSearch, width } = props;\n  return (\n    <Search\n      placeholder={placeholder}\n      onSearch={onSearch}\n      onPressEnter={e => onSearch(e.target.value)}\n      style={{ width: `${width}px` }}\n    />\n  );\n};\n\nconst LoginForm = props => {\n  const { onSubmit } = props;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    });\n  };\n\n  const { getFieldDecorator, getFieldError, isFieldTouched } = props.form;\n  const usernameError = isFieldTouched(\"username\") && getFieldError(\"username\");\n  const passwordError = isFieldTouched(\"password\") && getFieldError(\"password\");\n  return (\n    <Form layout=\"vertical\" onSubmit={handleSubmit}>\n      <Form.Item\n        validateStatus={usernameError ? \"error\" : \"\"}\n        help={usernameError || \"\"}\n      >\n        {getFieldDecorator(\"username\", {\n          rules: [{ required: false, message: \"Please input your username!\" }]\n        })(\n          <Input\n            prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            placeholder=\"Username\"\n          />\n        )}\n      </Form.Item>\n      <Form.Item\n        validateStatus={passwordError ? \"error\" : \"\"}\n        help={passwordError || \"\"}\n      >\n        {getFieldDecorator(\"password\", {\n          rules: [{ required: false, message: \"Please input your Password!\" }]\n        })(\n          <Input\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        )}\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Login\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst WrapperForm = Form.create({ name: \"LoginForm\" })(LoginForm);\n\nconst ActionPullDown = props => {\n  const { title, menuList, handleMenuClick } = props;\n  const menuItems = menuList.map(menu => {\n    return (\n      <Menu.Item title={menu} key={menu}>\n        {menu}\n      </Menu.Item>\n    );\n  });\n  const menu = (\n    <Menu theme={\"dark\"} onClick={handleMenuClick}>\n      {menuItems}\n    </Menu>\n  );\n\n  return (\n    <Dropdown overlay={menu}>\n      <Button ghost>\n        {title} <Icon type=\"down\" />\n      </Button>\n    </Dropdown>\n  );\n};\n\nexport { SearchBase as Search, WrapperForm as LoginForm, ActionPullDown };\n","import React from \"react\";\nimport { Button } from \"antd\";\n\nclass Home extends React.PureComponent {\n  render() {\n    const { example } = this.props.store;\n    const isProcessing = example.isProcessing ? <div><p>Now Loading...</p></div> : <p>Sleeping.</p>\n    return (\n      <div style={{ color: \"white\" }}>\n        <div>\n          <h3>Home Menu</h3>\n        </div>\n        <div>\n          <h5>Example Usages</h5>\n          <Button onClick={() => example.startProcessing()}>Start</Button>\n          <Button onClick={() => example.stopProcessing()}>Stop</Button>\n          <div>\n            {isProcessing}\n            <p>{example.whoAmI}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { LoginForm } from \"components/DataEntry\";\n\nclass Login extends React.PureComponent {\n  onSubmit = e => {\n    this.props.store.updateUserInfo(e.username, e.password);\n  };\n\n  render() {\n    const { username, status } = this.props.store;\n    const title = `Hello ${username || \"\"}!!`;\n    const stats =\n      status === \"fine\"\n        ? \"You look good today!!\"\n        : status === \"soso\"\n        ? \"Have a nice day!\"\n        : \"\";\n    return (\n      <div style={{ textAlign: \"center\", fontSize: \"1.3rem\" }}>\n        <div\n          style={{\n            width: \"50%\",\n            textAlign: \"center\",\n            margin: \"auto\",\n            marginTop: \"20%\"\n          }}\n        >\n          <h3 style={{ color: \"white\" }}>{title}</h3>\n          <p style={{ color: \"white\", margin: \"0px\" }}>{stats}</p>\n          <LoginForm onSubmit={this.onSubmit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Icon } from \"antd\";\nimport moment from \"moment\";\n\nconst ConsoleLine = props => {\n  const { name, icon, onEnterKeyDown, text } = props;\n  const userIcon = icon ? icon : \"user\";\n  const textLine = text ? (\n    <span className=\"console-input-log\">{text}</span>\n  ) : (\n    <span>\n      {moment().format(\"MMMM D H:mm:ss\")}\n      <input onKeyDown={onEnterKeyDown} className=\"console-input\" />\n    </span>\n  );\n  return (\n    <div>\n      <span style={{ fontSize: \"1rem\" }}>\n        <Icon className=\"console-icon\" type={userIcon} />\n        <span className=\"console-username\">{name}</span>\n      </span>\n      {textLine}\n    </div>\n  );\n};\n\nexport { ConsoleLine };\n","import React from \"react\";\nimport { ConsoleLine } from \"components/TextDisplayer\";\nimport { ActionPullDown } from \"components/DataEntry\";\n\nclass Console extends React.PureComponent {\n  onEnterKeyDown = e => {\n    const { user, terminal } = this.props;\n\n    if (e.keyCode === 13) {\n      const text = e.target.value;\n      terminal.onEnterKeyDown(text !== \"\" ? text : \" \");\n      e.target.value = \"\";\n    }\n  };\n\n  actionHandler = e => {\n    const { terminal } = this.props;\n    const actionEvents = {\n      delete: terminal.clearHistories\n    };\n    actionEvents[e.key]();\n  };\n\n  render() {\n    const { user, terminal } = this.props;\n    const histories = terminal.getHistories.map((text, idx) => {\n      return (\n        <li key={idx}>\n          <ConsoleLine text={text} name={user.username} />\n        </li>\n      );\n    });\n\n    return (\n      <div>\n        <div className=\"console-header\">\n          <ActionPullDown\n            title={\"ACTION\"}\n            menuList={[\"delete\"]}\n            handleMenuClick={this.actionHandler}\n          />\n        </div>\n        <ul className=\"console-list\">\n          {histories}\n          <li key={1}>\n            <ConsoleLine\n              onEnterKeyDown={this.onEnterKeyDown}\n              name={user.username}\n            />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Console;\n","import { action, decorate } from \"mobx\";\n\nclass UiState {\n    \n    manager;\n\n    toggleSideBar = () => {\n        this.manager.updateSize();\n    }\n\n    getSelectedItem = () => {\n        return this.manager.getSelectedItem\n    }\n\n    setGoldenLayoutManager = (manager) => {\n        this.manager = manager;\n    }\n\n    closeAll = () => {\n        this.manager.closeAll();\n    }\n\n    openAll = componentsList => {\n        this.manager.openAll(componentsList);\n    }\n}\n\nexport default decorate(UiState, {\n    toggleSideBar: action,\n    getSelectedItem: action,\n    closeAll: action,\n    openAll: action\n});","import { observable, action, computed, decorate } from \"mobx\";\n\nclass Example {\n\n    isProcessing = false;\n    who = {\n        name: 'hoge',\n        desc: 'iam example stete class'\n    }\n    \n    startProcessing() {\n        this.isProcessing = true;\n    }\n\n    stopProcessing() {\n        this.isProcessing = false;\n    }\n\n    get whoAmI() {\n        const state = this.isProcessing ? 'Processing' : 'Sleeping'\n        return `name <${this.who.name}> : description ${this.who.desc} ${state}`\n    }\n\n}\n\nexport default decorate(Example, {\n    isProcessing: observable,\n    startProcessing: action,\n    stopProcessing: action,\n    whoAmI: computed\n})","import { action, observable, computed, decorate } from \"mobx\";\n\nclass User {\n\n    username;\n    status;\n\n    updateUserInfo(username, status) {\n        this.username = username;\n        this.status = status;\n    }\n\n    get getUserInfo() {\n        return `NAME: ${this.username} STATUS: ${this.status}`;\n    }\n}\n\nexport default decorate(User, {\n    username: observable,\n    status: observable,\n    updateUserInfo: action,\n    getUserInfo: computed\n});","import { action, observable, decorate, computed } from \"mobx\";\n\nclass Terminal {\n  histories = [];\n\n  get getHistories() {\n    const length = this.histories.length;\n    return (\n      this.histories.slice(length < 20 ? 0 : length - 20, length) ||\n      this.histories\n    );\n  }\n\n  onEnterKeyDown = line => {\n    this.histories.push(line);\n  };\n\n  clearHistories = () => {\n    this.histories = [];\n  };\n}\n\nexport default decorate(Terminal, {\n  histories: observable,\n  getHistories: computed,\n  onEnterClick: action,\n  clearHistories: action\n});\n","import UiState from 'store/uistate';\nimport Example from 'store/example';\nimport User from 'store/user';\nimport Terminal from 'store/terminal';\n\n\nconst store = {\n    uiState: new UiState(),\n    example: new Example(),\n    user: new User(),\n    terminal: new Terminal(),\n};\n\nexport default store;","import React from \"react\";\nimport { observer } from 'mobx-react';\nimport { Search } from \"components/DataEntry\";\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\nimport Console from 'pages/Console';\n\nimport store from 'store';\n\nclass HogeA extends React.PureComponent {\n    render() {\n      return (\n        <div id=\"panel\" className=\"fit\">\n          <h2>hogeA</h2>\n          <Search width={100} onSearch={this.props.onSearch} />\n        </div>\n      );\n    }\n  }\n  \n  class HogeB extends React.PureComponent {\n    render() {\n      return (\n        <div id=\"panel\" className=\"fit\">\n          <h2>hogeB</h2>\n          <Search width={100} onSearch={this.props.onSearch} />\n        </div>\n      );\n    }\n  }\nconst ItemConfig = [\n  { title: \"Hoge_A\", type: \"react-component\", key: \"hogeA\", component: HogeA },\n  { title: \"Hoge_B\", type: \"react-component\", key: \"hogeB\", component: HogeB },\n  { title: \"home\", type: \"react-component\", key: \"home\", component: observer(Home), props: { store: store } },\n  { title: \"Login\", type: \"react-component\", key: \"login\", component: observer(Login), props: { store: store.user } },\n  { title: \"Terminal\", type: \"react-component\", key: \"console\", component: observer(Console), props: { user: store.user, terminal: store.terminal } }  \n];\n\nexport { ItemConfig };","import { ItemConfig } from \"panels/panelDefs\";\n\nclass GoldenLayoutManager {\n\n    static instance;\n\n    static setInstance(instance) {\n        this.instance = instance;\n        this.initialize();\n    };\n\n    static initialize() {\n        this.registerComponent();\n        this.instance.init();\n        console.log('Successfully registered components!')\n    }\n\n    static registerComponent() {\n        ItemConfig.forEach(config => {\n          this.instance.registerComponent(config.key, config.component);\n        });\n    };\n\n    static updateSize() {\n        this.instance.updateSize();\n    }\n\n    static getSelectedItem() {\n        return this.instance.selectedItem;\n    }\n    \n    static getComponentConfig() {\n        return ItemConfig.map(item => {\n            return {title: item.title, key: item.key};\n        });\n    }\n\n    static openPanel(component) {\n          const targetComp = ItemConfig.find(item => {\n              return item.key === component;\n          });\n          const newItemConfig = {\n            title: component,\n            type: \"react-component\",\n            component: component,\n            props: targetComp.props\n          };\n          const lastItem = this.instance.root.contentItems;\n          lastItem[0].addChild(newItemConfig)\n    };\n\n    static closeAll() {\n        const contentItems = this.instance.root.contentItems || [];\n        if (contentItems.length > 0) {\n            while(contentItems[0].contentItems.length > 0) {\n                contentItems[0].removeChild(contentItems[0].contentItems[0])\n            }\n        }\n    }\n\n    static openAll() {\n        ItemConfig.forEach(component => {\n            this.openPanel(component.key);\n        })\n    }\n}\n\nexport default GoldenLayoutManager;","import React from \"react\";\nimport { Icon, Tooltip } from \"antd\";\n\nconst FolderMenuItem = props => {\n  const { isOpen, title } = props;\n  const name = isOpen ? \"folder-open\" : \"folder\";\n  return (\n    <span style={{ whiteSpace: \"nowrap\" }}>\n      <Icon type={name} style={{ marginRight: \"3px\" }} />\n      {title}\n    </span>\n  );\n};\n\nconst SideBarMenu = props => {\n  const { closeAll, openAll } = props;\n  return (\n    <div>\n      <ul className=\"sidebar-menu\">\n        <li className=\"sidebar-menu-item\">\n          <Tooltip placement=\"bottomRight\" title=\"Open All Tabs\">\n            <span onClick={openAll}>\n              <Icon type=\"folder-open\" />\n            </span>\n          </Tooltip>\n        </li>\n        <li className=\"sidebar-menu-item\">\n          <Tooltip placement=\"bottomRight\" title=\"Close All Tabs\">\n            <span onClick={closeAll}>\n              <Icon type=\"close-square\" />\n            </span>\n          </Tooltip>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport { FolderMenuItem, SideBarMenu };\n","import React from \"react\";\nimport GoldenLayoutManager from \"panels/GoldenLayoutManager\";\nimport { FolderMenuItem, SideBarMenu } from \"components/Icon\";\n\nconst COMPONENT_CONFIG =  GoldenLayoutManager.getComponentConfig();\n\nclass SideBar extends React.PureComponent {\n\n  onClickMenuItem = componentName => {\n    GoldenLayoutManager.openPanel(componentName);\n  };\n\n  render() {\n    return (\n      <div className=\"fit sidebar\">\n        <div className=\"sidebar-title\">\n          <h4>TITLE</h4>\n        </div>\n        <SideBarMenu openAll={this.props.openAll} closeAll={this.props.closeAll} />\n        <ul id=\"menu-container\">\n          {COMPONENT_CONFIG.map(conf =>{\n            return <MenuItem key={conf.key} title={conf.title} componentName={conf.key} onClick={this.onClickMenuItem} />\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst MenuItem = props => {\n  const { title, onClick, componentName } = props;\n  return (\n    <li className=\"sidebar-tab-item\" onClick={() => onClick(componentName)}>\n      <FolderMenuItem\n        title={title}\n        isOpen={false}\n      />\n    </li>\n  );\n};\n\nexport default SideBar;\n","const GoldenLayoutConfig = {\n  settings: {\n    hasHeaders: true,\n    constrainDragToContainer: true,\n    reorderEnabled: true,\n    selectionEnabled: true,\n    popoutWholeStack: false,\n    blockedPopoutsThrowError: true,\n    closePopoutsOnUnload: true,\n    showPopoutIcon: true,\n    showMaximiseIcon: true,\n    showCloseIcon: true\n  },\n  dimensions: {\n    borderWidth: 10,\n    minItemHeight: 50,\n    minItemWidth: 50,\n    headerHeight: 20,\n    dragProxyWidth: 300,\n    dragProxyHeight: 200\n  },\n  labels: {\n    close: \"close\",\n    maximise: \"maximise\",\n    minimise: \"minimise\",\n    popout: \"open in new window\"\n  },\n  content: [\n    {\n      type: \"row\",\n      isClosable: false,\n      content: []\n    }\n  ]\n};\n\nexport { GoldenLayoutConfig };","import React from \"react\";\nimport GoldenLayout from \"golden-layout\";\nimport SplitPane from \"react-splitter-layout\";\nimport SideBar from \"panels/SideBar\";\nimport GoldenLayoutManager from \"panels/GoldenLayoutManager\";\nimport { GoldenLayoutConfig } from \"config\";\n\nconst SIDEBAR_MIN_SIZE = 0;\nconst PANEL_MIN_SIZE = 85;\nconst PANEL_INITIALIZE_SIZE = 90;\nconst CUSTOM_SPLITTER_CLASSNAME = \"custom-splitter\";\n\nexport class Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.node = React.createRef();\n  }\n  componentDidMount() {\n    const instance = new GoldenLayout(\n      GoldenLayoutConfig,\n      window.$(\"#gl-container\")\n    );\n    GoldenLayoutManager.setInstance(instance);\n    this.props.store.uiState.setGoldenLayoutManager(GoldenLayoutManager);\n  }\n\n  render() {\n    const { uiState, user } = this.props.store;\n\n    return (\n      <div className=\"fit\">\n        <SplitPane\n         customClassName={CUSTOM_SPLITTER_CLASSNAME} \n          percentage={true}\n          secondaryInitialSize={PANEL_INITIALIZE_SIZE}\n          onDragEnd={uiState.toggleSideBar}\n          primaryMinSize={SIDEBAR_MIN_SIZE}\n          secondaryMinSize={PANEL_MIN_SIZE}\n        >\n          <SideBar openAll={uiState.openAll} closeAll={uiState.closeAll} toggleSideBar={uiState.toggleSideBar} />\n          <div id=\"gl-container\">\n            <div className=\"container-header\">\n              <h4>{user.username ? `${user.username}$ ${user.getUserInfo}` : 'Please Login...'}</h4>\n            </div>\n            <div ref={node => (this.node = node)} />\n          </div>\n        </SplitPane>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Home } from 'panels/Home';\nimport \"golden-layout/src/css/goldenlayout-base.css\";\nimport \"golden-layout/src/css/goldenlayout-dark-theme.css\";\nimport \"react-splitter-layout/lib/index.css\";\nimport 'antd/dist/antd.css';\nimport 'index.css';\nimport store from 'store';\nimport { observer } from 'mobx-react';\n\nobserver(Home)\n\nfunction App() {\n  return (\n    <div className=\"fit\">\n      <Home store={store} ref={React.createRef()}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport $ from \"jquery\";\n\nfunction init() {\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n    window.$ = $;\n}\n\nexport { init };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { init } from 'initialize';\n\n\ninit();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}